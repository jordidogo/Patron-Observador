@startuml

title __P7's Class Diagram__\n

  namespace P7 {
    interface P7.Observador {
        {abstract} + actualizar()
    }
  }
  

  namespace P7 {
    class P7.PantallaMeteorologica {
        - frame : JFrame
        - labelAlerta : JLabel
        - labelCiudad : JLabel
        - labelHora : JLabel
        - labelHumedad : JLabel
        - labelIcono : JLabel
        - labelTemperatura : JLabel
        + PantallaMeteorologica()
        + actualizar()
        - cargarIcono()
        - extraerHora()
        - mostrarAlertaSiNecesario()
    }
  }
  

  namespace P7 {
    class P7.SeleccionCiudad {
        - checkBoxes : Map<String, JCheckBox>
        - frame : JFrame
        + SeleccionCiudad()
        - actualizarCondicionesMeteorologicas()
        - iniciarActualizacionesPeriodicas()
        - procesarSeleccion()
    }
  }
  

  namespace P7 {
    class P7.SujetoWeatherstack {
        - observadoresPorCiudad : Map<String, List<Observador>>
        + agregarObservador()
        + notificarObservadores()
    }
  }
  

  namespace P7 {
    class P7.WeatherStackAPI {
        ~ apiKey : String
        ~ apiUrl : String
        + getWeatherConditionsFrom()
        {static} - getWeatherConditionFromResponse()
    }
  }
  

  namespace P7 {
    class P7.WeatherstackExample {
        {static} + main()
    }
  }
  

  P7.PantallaMeteorologica .up.|> P7.Observador
  P7.SeleccionCiudad o-- P7.SujetoWeatherstack : sujeto
  P7.SeleccionCiudad o-- P7.WeatherStackAPI : weatherStackAPI


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
